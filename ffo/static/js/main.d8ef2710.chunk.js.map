{"version":3,"sources":["bgPattern.svg","components/loading/Loading.jsx","components/button/button.jsx","components/radio/radio.jsx","services/common/index.js","services/team/get.js","components/loading/index.js","components/button/index.js","components/teamsInLeague/TeamCard.jsx","components/teamsInLeague/index.js","components/teamsInLeague/TeamsInLeague.jsx","hooks/useLocalStorage.js","pages/teamselect/index.js","pages/teamselect/TeamSelect.jsx","services/competition/get.js","services/user/userServices.js","pages/Start.jsx","styles/mat-theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loading","className","src","alt","Button","children","green","onClick","primary","lg","link","classes","secondary","href","default","BasicRadio","value","setValue","FormControl","component","RadioGroup","aria-label","name","onChange","event","target","FormControlLabel","control","Radio","color","label","getCookie","parts","document","cookie","split","length","pop","shift","TeamServices","getTeamsForLeague","competitionId","Promise","accept","reject","fetch","process","method","headers","body","JSON","stringify","query","then","response","json","console","log","data","teamsInCompetition","catch","err","getTeamFromTeamId","teamId","getTeam","TeamCard","TeamInfo","Card","CardContent","logo","CardActions","TeamsInLeague","key","initialValue","useState","item","window","localStorage","getItem","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","useLocalStorage","teamsByCompetition","setTeamsByCompetition","teams","setTeams","useEffect","a","TeamQueries","teamInCompetitions","all","map","teamComp","teamDetail","t","TeamSelect","competitions","gender","setGender","selectedCompId","setSelectedCompetition","filter","c","includes","leagueId","sort","b","tier","comp","Accordion","ev","expanded","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","CompetitionServices","getCompetitionsForCountry","country","callback","getUsersFromId","userId","users","getUserInfo","replace","user","createUser","screen_name","location","Start","load","setLoad","setCompetitions","startGame","userService","userInfo","parseInt","userResult","info","createMuiTheme","require","palette","main","App","svgPattern","ThemeProvider","theme","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d8ef2710.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bgPattern.abbb91ac.svg\";","import React from 'react';\r\nimport './Loading.scss';\r\n\r\nconst loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"loading-text-container\">\r\n                <div>loading...</div>\r\n            </div>\r\n            <div className=\"app-logo-container\">\r\n                <img src={'MainLogo.svg'} className=\"app-logo-loading\" alt=\"ball-logo\" />\r\n            </div>\r\n        </div>);\r\n}\r\n \r\nexport default loading;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './button.scss';\r\n\r\nconst Button = ({children, green, onClick, primary, lg ,link, secondary}) => {\r\n    let classes = 'button ';\r\n    classes += primary ? 'primary-btn' : '';\r\n    classes += secondary ? 'secondary-btn' : '';\r\n    classes += green ? 'green-btn' : '';\r\n    classes += lg ? ' lg-btn' : ' md-btn';\r\n    return (<a href={link} className={classes} onClick={onClick}>\r\n        {children}\r\n    </a>);\r\n}\r\n\r\nButton.default = {\r\n    link: ''\r\n}\r\n\r\nButton.propTypes = {\r\n    green: PropTypes.bool,\r\n    primary: PropTypes.bool\r\n}\r\n \r\nexport default Button;","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst BasicRadio = ({value, setValue, primary}) => {\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\r\n      <RadioGroup aria-label=\"footballing gender\" className=\"afo-radio\" name=\"gender\" value={value} onChange={handleChange}>\r\n        <FormControlLabel value=\"women\" control={<Radio color={primary ? 'primary' : 'secondary'} />} label=\"Women's game\" />\r\n        <FormControlLabel value=\"men\" control={<Radio />} label=\"Men's game\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n \r\nexport default BasicRadio;","export function getCookie(name) {\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    if (parts.length === 2) return parts.pop().split(';').shift();\r\n  }","import { getCookie } from '../common';\r\n\r\nexport default class TeamServices {\r\n    static getTeamsForLeague = (competitionId) => {\r\n        return new Promise((accept, reject) => \r\n            fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                },\r\n                body: JSON.stringify({query: `query { teamsInCompetition(competitionId: ${competitionId}) {` + \r\n                    `teamId\r\n                    standing\r\n                    competitionId\r\n                }}`})\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response.data);\r\n                accept(response.data.teamsInCompetition);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        );\r\n    }\r\n\r\n    static getTeamFromTeamId = (teamId) => {\r\n        return new Promise((accept, reject) => \r\n            fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                },\r\n                body: JSON.stringify({query: `query { getTeam(filter: { teamId: ${teamId} }) {` + \r\n                    `name \r\n                     logo\r\n                     _id\r\n                     ground {\r\n                        name\r\n                        capacity\r\n                        city\r\n                      }\r\n                }}`})\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response.data.getTeam);\r\n                accept(response.data.getTeam);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        );\r\n    }\r\n}","import loading from \"./Loading\";\r\n\r\nexport default loading;","import Button from \"./button\";\r\n\r\nexport default Button;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '../button';\r\n\r\nconst TeamCard = ({TeamInfo}) => {\r\n    const name = TeamInfo.name;\r\n    return <Card className=\"team-card\">\r\n        <CardContent>\r\n            <div className=\"team-content\">\r\n                <img src={TeamInfo.logo} alt={`${name} logo`}/>\r\n            </div>\r\n        </CardContent>\r\n        <CardActions>\r\n            <Button green>{name} Analysis</Button>\r\n        </CardActions>\r\n    </Card>;\r\n}\r\n \r\nexport default TeamCard;","import TeamsInLeague from \"./TeamsInLeague\";\r\n\r\nexport default TeamsInLeague;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport TeamQueries from '../../services/team/get';\r\nimport Loading from '../loading';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport Table from '../table';\r\nimport './TeamsInLeague.scss';\r\nimport TeamCard from './TeamCard';\r\n\r\nconst TeamsInLeague = ({ competitionId }) => {\r\n    const [ teamsByCompetition, setTeamsByCompetition ] = useLocalStorage('teamsByCompetitionId', []);\r\n    const [ teams, setTeams ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const teamsInCompetition = teamsByCompetition[competitionId];\r\n            if (teamsInCompetition) {\r\n                setTeams(teamsInCompetition);\r\n            } else {\r\n                const teamInCompetitions = await TeamQueries.getTeamsForLeague(competitionId);\r\n                Promise.all(\r\n                    teamInCompetitions.map(async (teamComp) => {\r\n                        const teamDetail = await TeamQueries.getTeamFromTeamId(teamComp.teamId);\r\n                        teamDetail.teamId = teamComp.teamId;\r\n                        return teamDetail;\r\n                    })\r\n                ).then((teams) => {\r\n                    setTeams(teams);\r\n                    setTeamsByCompetition({...teamsByCompetition, [competitionId] : teams });\r\n                });\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    return teams.length > 0 ? \r\n        //<Table className=\"teams-table\" rows={teams} columns={[]} rowNames={['logo', 'name', 'ground|city', 'ground|name', 'ground|capacity']} />\r\n        <div className=\"team-cards\">\r\n            {teams.map((t) => <TeamCard key={t.teamId} TeamInfo={t} />)}\r\n        </div>\r\n        : <Loading></Loading>;\r\n}\r\n \r\nexport default TeamsInLeague;","import { useState } from 'react';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n  \r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n  \r\n    return [storedValue, setValue];\r\n  }","import TeamSelect from \"./TeamSelect\";\r\n\r\nexport default TeamSelect;","import React, { useState } from 'react';\r\nimport BasicRadio from '../../components/radio/radio';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport TeamsInLeague from '../../components/teamsInLeague';\r\nimport './TeamSelect.scss';\r\n\r\nconst TeamSelect = ({competitions}) => {\r\n    const [gender, setGender] = useState('men');\r\n    const [selectedCompId, setSelectedCompetition ] = useState(null);\r\n\r\n    return (<section className=\"leagues\">\r\n        <BasicRadio value={gender} setValue={setGender} />\r\n        {gender === 'men' ? competitions.filter(c => !c.name.includes('WSL') && \r\n            (selectedCompId === null || selectedCompId === c.leagueId)).sort((a, b) => a.tier > b.tier ? 1 : -1).map((comp) => {\r\n            return <Accordion key={comp.leagueId} onChange={(ev, expanded) => {\r\n                console.log(expanded);\r\n                setSelectedCompetition(expanded ? comp.leagueId : null)\r\n        }} className=\"team-select-acc\" TransitionProps={{ unmountOnExit: true }}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\">\r\n                            {comp.name}\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <TeamsInLeague competitionId={comp.leagueId} />\r\n                        </AccordionDetails>\r\n                </Accordion>\r\n        }) : competitions.filter(c => c.name.includes('WSL')).sort((a, b) => a.tier > b.tier ? 1 : -1).map((comp) => {\r\n            return <div key={comp.leagueId} className=\"league\">\r\n                    <div className=\"league-name\">\r\n                        {comp.name}\r\n                    </div>\r\n                    <div className=\"league-logo\">\r\n                        <TeamsInLeague competitionId={comp.leagueId} />\r\n                    </div>\r\n                </div>\r\n        })}\r\n    </section>);\r\n}\r\n \r\nexport default TeamSelect;","import { getCookie } from '../common';\r\n\r\nexport default class CompetitionServices {\r\n    static getCompetitionsForCountry = (country, callback) => {\r\n        fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie('token')\r\n            },\r\n            body: JSON.stringify({query: `query { competitions(filter: { AND: [{ isCurrent: true }, { country: \"${country}\" }, { type: LEAGUE }]})` + \r\n            '{ name leagueId isCurrent tier logo }}'})\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            callback(data);\r\n        });\r\n    }\r\n}","import { getCookie } from '../common';\r\n\r\nexport default class TeamServices {\r\n    static getUsersFromId = (userId) => {\r\n        return new Promise((accept, reject) => \r\n            fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                },\r\n                body: JSON.stringify({query: `query getUsers {\r\n                    users(filter: { userId: ${userId} }) {\r\n                      screenName,\r\n                      name,\r\n                      location,\r\n                      authLevel\r\n                      userId\r\n                    }\r\n                  }`})\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response.data.users);\r\n                accept(response.data.users);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        );\r\n    }\r\n\r\n    static getUserInfo = () => {\r\n        return new Promise((accept, reject) => \r\n            fetch(process.env.REACT_APP_GRAPH_SERVER.replace('graphql', 'api/user'),\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response.user);\r\n                accept(response.user);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        );\r\n    }\r\n\r\n    static createUser = ({ name, screen_name, location }) => {\r\n        return new Promise((accept, reject) => \r\n            fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                },\r\n                body: JSON.stringify({query: `mutation addUser { \r\n                    createUser(record:{ screenName: ${screen_name}, name: ${name}, location: ${location}, authLevel: PLAYER}) {\r\n                    recordId,\r\n                    record {\r\n                      name,\r\n                      userId\r\n                    },\r\n                    error {\r\n                      __typename\r\n                    }\r\n                  }\r\n                }`})\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response.data.getTeam);\r\n                accept(response.data.getTeam);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        );\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Loading from '../components/loading/Loading';\r\nimport Button from '../components/button/button';\r\nimport TeamSelect from './teamselect'\r\nimport CompetitionServices from '../services/competition/get';\r\nimport userService from '../services/user/userServices';\r\nimport './Start.scss';\r\n\r\nconst Start = () => {\r\n    const [ load, setLoad ] = useState(false);\r\n    const [ competitions, setCompetitions ] = useState([]);\r\n\r\n    const startGame = async () => {\r\n        setLoad(true);\r\n\r\n        const userInfo = await userService.getUserInfo();\r\n\r\n        if (userInfo) {\r\n            const usersList = await userService.getUsersFromId(parseInt(userInfo.userId));\r\n\r\n            if (usersList.length === 0) {\r\n                const userResult = await userService.createUser(userInfo);\r\n                userResult.error.length > 0 ? console.error('unable to create user: ', userResult.error) :\r\n                console.info('new user created ok: ', userResult);\r\n            }\r\n        }\r\n\r\n        CompetitionServices.getCompetitionsForCountry('England', (response) => {\r\n            (response && response.data) && setCompetitions(response.data.competitions);\r\n            setLoad(false);\r\n        });\r\n    }\r\n\r\n    return <div className=\"app-start\">\r\n            {(!load && competitions.length === 0) && <><div className=\"heading\">\r\n                <div className=\"text-logo-left\">\r\n                    <img src={'LogoFFOText.svg'} className=\"text-logo\" alt=\"logo\" />\r\n                </div>\r\n                <div className=\"text\">Welcome to Fantasy Football Owner {document.cookie['userName']}</div>\r\n                <div className=\"text-logo-right\">\r\n                    <img src={'LogoFFOText.svg'} className=\"text-logo\" alt=\"logo\" />\r\n                </div>\r\n            </div>\r\n            <section className=\"app-start-action\">\r\n                <span>This is a Fantasy Football game based on real events/data</span>\r\n                <span>Manager transitions, player crises, financial ruin?! This is fantasy football like no other.</span>\r\n                <span>Legal notice: this is a non-comercial/amateur game. Players/users do not pay for any service.</span>\r\n                <Button green lg onClick={startGame}>Start new game</Button>\r\n            </section></>}\r\n            {load && <Loading />}\r\n            {(!load && competitions.length > 0) && <TeamSelect competitions={competitions}/>}\r\n        </div>;\r\n}\r\n \r\nexport default Start;","const { createMuiTheme } = require(\"@material-ui/core\");\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n        // Light Green\r\n        main: '#69bb31',\r\n        },\r\n        secondary: {\r\n        // Red\r\n        main: '#8f214d',\r\n        },\r\n    },\r\n});","import React from 'react';\nimport Start from './pages/Start';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from './styles/mat-theme';\nimport svgPattern from './bgPattern.svg'\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"background\">\n        <img alt=\"background pattern\" src={svgPattern}></img>\n      </div>\n      <ThemeProvider theme={theme}>\n        <Start />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}