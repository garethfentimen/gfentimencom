{"version":3,"sources":["components/button/button.jsx","services/common/index.js","hooks/useFetch.js","services/game/index.js","context/userContext.js","pages/Start.jsx","styles/mat-theme.js","bgPattern.svg","services/team/get.js","context/teamContext.js","components/loading/Loading.jsx","components/navigation/HeaderNav.jsx","pages/club/clubhouse/Clubhouse.jsx","components/ground/Ground.jsx","pages/club/stadium/Stadium.jsx","components/table/AfoTableHead.jsx","components/table/AfoTable.jsx","pages/club/squad/Squad.jsx","services/player/index.js","pages/player/Player.jsx","pages/club/Club.jsx","services/user/userServices.js","components/button/index.js","services/team/getManager.js","components/analysis/Broadcasting.jsx","services/financial/getBroadcastingRevenue.js","services/financial/index.js","components/analysis/Matchday.jsx","context/competitionContext.js","components/teamanalyse/index.js","components/teamanalyse/TeamAnalyse.jsx","services/competition/index.js","components/teamsInLeague/TeamCard.jsx","components/teamsInLeague/index.js","components/teamsInLeague/TeamsInLeague.jsx","hooks/useLocalStorage.js","pages/teamselect/TeamSelect.jsx","pages/teamselect/index.js","pages/teamselect/TeamSelectContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","children","green","onClick","primary","lg","link","classes","secondary","href","className","default","getCookie","name","parts","document","cookie","split","length","pop","shift","standardHeaders","useFetch","query","returnObjectName","run","useState","runNow","setRunNow","thisQuery","setQuery","rtnObj","setRtnObj","useEffect","a","fetch","process","method","headers","body","JSON","stringify","response","json","previousState","loading","data","error","message","setGameTeam","currentLeagueId","team","user","today","Date","startDate","dayjs","format","teamId","userId","UserContext","React","createContext","Start","history","useHistory","useContext","gameTeam","gameTeamLoading","gameTeamError","push","src","alt","createMuiTheme","require","palette","main","TeamServices","getTeamsForLeague","competitionId","Promise","accept","reject","then","console","log","teamsInCompetition","catch","err","getTeamFromTeamId","getTeamWithTeamId","getTeam","_id","logo","ground","capacity","city","flattenTeamObject","TeamContext","HeaderNav","teamInfo","to","Clubhouse","Ground","toLocaleString","Stadium","EnhancedTableHead","headCells","order","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","useStyles","TableHead","TableRow","map","headCell","property","sortKey","id","TableCell","key","align","numeric","padding","disablePadding","sortDirection","TableSortLabel","active","direction","event","label","visuallyHidden","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","descendingComparator","b","positionEnum","Attacker","Midfielder","Defender","Goalkeeper","positionComparator","AfoTable","columns","rows","rowMeta","defaultOrderDescBy","onRowClick","setOrder","setOrderBy","TableContainer","component","Paper","Table","aria-label","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","toLowerCase","getComparator","row","rowDetail","rowName","scope","processor","Squad","squadList","squadListLoading","ageProcessor","player","playerId","dob","birthDate","age","getFullYear","m","getMonth","getDate","Player","useParams","Club","params","location","useLocation","setTeamId","userInfo","teamInfoLoading","teamInfoError","getTeamInfoNow","isNaN","Provider","value","pathname","path","exact","getUsersFromTwitterId","twitterId","users","getUserInfo","replace","info","createUser","screenName","ffoUserId","getCurrentManager","jsonResponse","coaches","BroadcastingAnalysis","broadcastingRevenue","myData","getFloat","flVal","parseFloat","angle","toFixed","subLabel","totalRevenue","equalShare","basicAward","solidarity","minimumFeaturedGames","facilityFeePerGame","overseasPaymentMin","centralCommercial","colorType","colorDomain","showLabels","labelsAboveChildren","getBroadcastingRevenue","broadcastRevenue","getAttendence","Matchday","season","leagueId","attendanceInfos","attendanceInfosLoading","attError","reRun","attendanceInfo","seasonTickets","matchdayTickets","attendance","unsoldTickets","Grid","item","xs","start","end","formatCompetitionName","context","s","competitionName","TeamAnalyse","onBack","onTeamSelect","competition","competitionContext","manager","setManager","setSeason","seasons","seasonsLoading","find","select","Select","onChange","e","target","MenuItem","container","justify","variant","color","startIcon","alignItems","undefined","knownAs","firstName","lastName","Broadcasting","TeamCard","onAnalyseTeam","Card","CardContent","CardActions","TeamsInLeague","CompetitionContext","initialValue","window","localStorage","getItem","parse","storedValue","setStoredValue","valueToStore","Function","setItem","useLocalStorage","teamsByCompetition","setTeamsByCompetition","teams","setTeams","selectedTeam","setSelectedTeam","broadcasting","setBroadcasting","createGameTeamResult","createGameTeamLoading","runCreateGameTeam","updateQuery","TeamQueries","teamInCompetitions","all","teamComp","teamDetail","record","t","TeamSelect","competitions","gender","selectedCompId","setSelectedCompetition","style","fontSize","filter","c","includes","tier","comp","Accordion","ev","expanded","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","AccordionDetails","TeamSelectContainer","competitionsQuery","competitionsForCountry","competitionsLoading","competitionLoadError","App","setUser","twitterUserInfo","setTwitterUserInfo","latestUsers","latestUsersLoading","latestUsersError","runLatestUser","userService","parseInt","usersList","userResult","svgPattern","ThemeProvider","basename","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04823b38.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './button.scss';\r\n\r\nconst Button = ({children, green, onClick, primary, lg ,link, secondary}) => {\r\n    let classes = 'button ';\r\n    classes += primary ? 'primary-btn' : '';\r\n    classes += secondary ? 'secondary-btn' : '';\r\n    classes += green ? 'green-btn' : '';\r\n    classes += lg ? ' lg-btn' : ' md-btn';\r\n    return (<a href={link} className={classes} onClick={onClick}>\r\n        {children}\r\n    </a>);\r\n}\r\n\r\nButton.default = {\r\n    link: ''\r\n}\r\n\r\nButton.propTypes = {\r\n    green: PropTypes.bool,\r\n    primary: PropTypes.bool\r\n}\r\n \r\nexport default Button;","export function getCookie(name) {\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    if (parts.length === 2) return parts.pop().split(';').shift();\r\n}\r\n\r\nexport const standardHeaders = {\r\n  'Content-Type': 'application/json',\r\n  'Accept': 'application/json',\r\n  'Authorization': 'Bearer ' + getCookie('token')\r\n};","import { useState, useEffect } from \"react\";\r\nimport { standardHeaders } from '../services/common';\r\n \r\nfunction useFetch(query, returnObjectName = \"\", run = true) {\r\n    const [runNow, setRunNow] = useState(run);\r\n    const [thisQuery, setQuery] = useState(query);\r\n    const [rtnObj, setRtnObj] = useState({});\r\n   \r\n    useEffect(() => {\r\n      (async () => {\r\n        if (runNow) {\r\n          try {\r\n            const response = await fetch(process.env.REACT_APP_GRAPH_SERVER, { \r\n              method: 'POST',\r\n              headers: standardHeaders,\r\n              body: JSON.stringify({ query:thisQuery })\r\n            });\r\n            const json = await response.json();\r\n    \r\n            if (json) {\r\n              if (returnObjectName) {\r\n                setRtnObj((previousState) => ({\r\n                    ...previousState, \r\n                    ...{ \r\n                      loading: false,\r\n                      data: json.data[returnObjectName]\r\n                    }\r\n                  }));\r\n              } else {\r\n                setRtnObj((previousState) => ({\r\n                  ...previousState, \r\n                  ...{\r\n                    loading: false,\r\n                    data: json.data\r\n                  }\r\n                }));\r\n              }\r\n            }\r\n          } catch (error) {\r\n            setRtnObj((previousState) => ({\r\n                ...previousState,\r\n                ...{\r\n                  loading: false,\r\n                  data: null,\r\n                  error: error.message\r\n                }\r\n            }));\r\n          }\r\n          setRunNow(false);\r\n        }\r\n      })();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [runNow]);\r\n\r\n    return [ rtnObj.data, rtnObj.loading, rtnObj.error, setRunNow, setQuery ];\r\n}\r\n \r\nexport default useFetch;","import dayjs from 'dayjs';\r\n\r\nexport function getGameTeam(userId) {\r\n    return userId ? `query { gameTeams(filter: `+\r\n            `{ userId: ${userId}}) {` + \r\n                    `teamId\r\n                    userId\r\n                    startDate\r\n                    endDate\r\n                    currentLeagueId\r\n                }}` : '';\r\n}\r\n\r\nexport function setGameTeam(currentLeagueId, team, user) {\r\n    const today = new Date();\r\n    const startDate = dayjs(today).format('YYYY-MM-DD');\r\n    return `mutation { createGameTeam(record: {` +\r\n        `teamId: ${team ? team.teamId : ''},` +\r\n        `userId: ${user ? user.userId : ''}, ` +\r\n        `startDate: \"${startDate}\", ` +\r\n        `currentLeagueId: ${currentLeagueId}` +\r\n    `}) {\r\n        recordId\r\n        record {\r\n            teamId\r\n        }\r\n        error {\r\n            __typename\r\n        }\r\n    }}`;\r\n}\r\n","import React from 'react';\r\n\r\nconst UserContext = React.createContext('user');\r\n\r\nexport default UserContext;","import React, { useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '../components/button/button';\r\nimport './Start.scss';\r\nimport useFetch from '../hooks/useFetch';\r\nimport { getGameTeam } from '../services/game';\r\nimport UserContext from '../context/userContext';\r\n\r\nconst Start = () => {\r\n    let history = useHistory();\r\n    const user = useContext(UserContext);\r\n    const [ gameTeam, gameTeamLoading, gameTeamError ]\r\n       = useFetch(getGameTeam(user ? user.userId : null), \"gameTeams\");\r\n\r\n    function startGame() {\r\n        history.push('/new');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (gameTeam && !gameTeamError) {\r\n            history.push('/club/' + gameTeam.teamId);\r\n        }\r\n    }, [gameTeam, gameTeamError, history]);\r\n\r\n    return !gameTeamLoading && <div className=\"app-start\">\r\n            <div className=\"heading\">\r\n                <div className=\"text-logo-left\">\r\n                    <img src={process.env.PUBLIC_URL + '/LogoFFOText.svg'} className=\"text-logo\" alt=\"logo\" />\r\n                </div>\r\n                <div className=\"text\">Welcome to Fantasy Football Owner {document.cookie['userName']}</div>\r\n                <div className=\"text-logo-right\">\r\n                    <img src={process.env.PUBLIC_URL + '/LogoFFOText.svg'} className=\"text-logo\" alt=\"logo\" />\r\n                </div>\r\n            </div>\r\n            <section className=\"app-start-action\">\r\n                <span>This is a Fantasy Football game based on real events/data</span>\r\n                <span>Manager transitions, player crises, financial ruin?! This is fantasy football like no other.</span>\r\n                <span>Legal notice: this is a non-comercial/amateur game. Players/users do not pay for any service.</span>\r\n                <Button green lg onClick={startGame}>Start new game</Button>\r\n            </section>\r\n        </div>;\r\n}\r\n \r\nexport default Start;","const { createMuiTheme } = require(\"@material-ui/core\");\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n        // Light Green\r\n        main: '#69bb31',\r\n        },\r\n        secondary: {\r\n        // Red\r\n        main: '#8f214d',\r\n        },\r\n    },\r\n});","export default __webpack_public_path__ + \"static/media/bgPattern.42364d20.svg\";","import { getCookie } from '../common';\r\n\r\nexport default class TeamServices {\r\n    static getTeamsForLeague = (competitionId) => {\r\n        return new Promise((accept, reject) => \r\n            fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                },\r\n                body: JSON.stringify({query: `query { teamsInCompetition(competitionId: ${competitionId}) {` + \r\n                    `teamId\r\n                    standing\r\n                    competitionId\r\n                }}`})\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response.data);\r\n                accept(response.data.teamsInCompetition);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        );\r\n    }\r\n\r\n    static getTeamFromTeamId = (teamId) => {\r\n        return new Promise((accept, reject) => \r\n            fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                },\r\n                body: JSON.stringify({query: getTeamWithTeamId})\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const team = response.data.getTeam;\r\n                accept(flattenTeamObject(team));\r\n            }).catch((err) => {\r\n                reject(null, err);\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const getTeamReturnObjectName = 'getTeam';\r\n\r\nexport const getTeamWithTeamId = (teamId) => {\r\n    return `query { getTeam(filter: { teamId: ${teamId} }) {` + \r\n                    `name \r\n                    logo\r\n                    teamId\r\n                    _id\r\n                    ground {\r\n                        name\r\n                        capacity\r\n                        city\r\n                    }\r\n                }}`;\r\n}\r\n\r\nexport function flattenTeamObject(team) {\r\n    return {\r\n            name: team.name,\r\n            _id: team._id,\r\n            logo: team.logo,\r\n            ground: team.ground.name,\r\n            capacity: team.ground.capacity,\r\n            city: team.ground.city\r\n        };\r\n}","import React from 'react';\r\n\r\nconst TeamContext = React.createContext('team');\r\n\r\nexport default TeamContext;","import React from 'react';\r\nimport './Loading.scss';\r\n\r\nconst loading = ({children}) => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"loading-text-container\">\r\n                {children ? children : <div>loading...</div>}\r\n            </div>\r\n            <div className=\"app-logo-container\">\r\n                <img src={process.env.PUBLIC_URL + '/MainLogo.svg'} className=\"app-logo-loading\" alt=\"ball-logo\" />\r\n            </div>\r\n        </div>);\r\n}\r\n \r\nexport default loading;","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TeamContext from '../../context/teamContext';\r\nimport './HeaderNav.scss';\r\n\r\nexport default function HeaderNav() {\r\n    const teamInfo = useContext(TeamContext);\r\n    return <header>\r\n        \r\n        <Link to={`/club/${teamInfo.teamId}`}>\r\n            <img src={teamInfo.logo} className=\"team-logo\" alt={`${teamInfo.name} logo`} />\r\n        </Link>\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to={`/club/${teamInfo.teamId}/clubhouse`}>\r\n                        <div className=\"flex\">\r\n                            Clubhouse\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`/club/${teamInfo.teamId}/ground`}>\r\n                        Stadium\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`/club/${teamInfo.teamId}/squad`}>\r\n                        Squad\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </header>\r\n}","import React, { useContext } from 'react';\r\nimport TeamContext from '../../../context/teamContext';\r\n\r\nexport function Clubhouse() {\r\n    const teamInfo = useContext(TeamContext);\r\n\r\n    return <>\r\n                <div>\r\n                rfhsdfh\r\n                {teamInfo.name}\r\n            </div></>; \r\n}","import React from 'react';\r\n\r\nconst Ground = ({ capacity, city, name}) => {\r\n    return <>\r\n            <div className=\"text-center\">{name}, {city}</div>\r\n            <div className=\"text-center\">Capacity: {capacity.toLocaleString(\"en-GB\")}</div>\r\n        </>\r\n}\r\n\r\nexport default Ground;","import React, { useContext } from 'react';\r\nimport TeamContext from '../../../context/teamContext';\r\nimport { Ground } from '../../../components/ground';\r\nimport Loading from '../../../components/loading/Loading';\r\n\r\nexport default function Stadium() {\r\n    const teamInfo = useContext(TeamContext);\r\n    return teamInfo ? \r\n        <>\r\n        hellllloooo\r\n        <Ground \r\n        capacity={teamInfo.ground.capacity} \r\n        city={teamInfo.ground.city} \r\n        name={teamInfo.ground.ground} \r\n    /></> : <Loading />;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function EnhancedTableHead({ classes, headCells, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort }) {\r\n  classes = useStyles();\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {headCells.map((headCell) => {\r\n          const sortKey = headCell.id || headCell.name;\r\n          return <TableCell\r\n            key={sortKey}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === sortKey ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === sortKey}\r\n              direction={orderBy === sortKey ? order : 'asc'}\r\n              onClick={createSortHandler(sortKey)}\r\n            >\r\n              {headCell.label || headCell.name}\r\n              {orderBy === sortKey ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        })}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n  \r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object,\r\n  numSelected: PropTypes.number,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport AfoTableHead from './AfoTableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst AfoTable = ({className, columns, rows, rowMeta, defaultOrderDescBy, onRowClick}) => {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState(defaultOrderDescBy);\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  return rows ? (<TableContainer className={className} component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        {/* <TableHead onRequestSort={handleRequestSort}>\r\n          <TableRow>\r\n              {columns.map((column)=> {\r\n                  return <TableCell key={column.name}>{column.name}</TableCell>;\r\n              })}\r\n          </TableRow>\r\n        </TableHead> */}\r\n        <AfoTableHead \r\n          headCells={columns} \r\n          onRequestSort={handleRequestSort} \r\n          orderBy={orderBy} \r\n          order={order} \r\n        />\r\n        <TableBody>\r\n          {stableSort(rows, getComparator(order, orderBy)).map((row, index) => (\r\n            <TableRow key={index} onClick={() => onRowClick(row)}>\r\n              {rowMeta.map((rowDetail) => {\r\n                  const rowName = rowDetail.name;\r\n                  return <TableCell \r\n                    key={rowName} className='afo-table-cell' \r\n                    component=\"th\" scope=\"row\" \r\n                    align={rowName.align ? rowName.align : 'left'}\r\n                    sortDirection={orderBy === rowName ? order : false}\r\n                  >\r\n                      {rowDetail.processor ? rowDetail.processor(row[rowName]) : row[rowName]}\r\n                  </TableCell>\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  ) : null;\r\n}\r\n\r\nAfoTable.propTypes = {\r\n  className: PropTypes.string,\r\n  columns: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  rowMeta: PropTypes.array.isRequired\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nconst positionEnum = {\r\n  Attacker: 1,\r\n  Midfielder: 2,\r\n  Defender: 3,\r\n  Goalkeeper: 4\r\n}\r\n\r\nfunction positionComparator(a, b, orderBy) {\r\n  if (positionEnum[b[orderBy]] < positionEnum[a[orderBy]]) {\r\n    return -1;\r\n  }\r\n  if (positionEnum[b[orderBy]] > positionEnum[a[orderBy]]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  console.log('Getting Comparator',order, orderBy);\r\n  if (orderBy.toLowerCase() === 'positiontype') {\r\n    return order === 'desc'\r\n      ? (a, b) => positionComparator(a, b, orderBy)\r\n      : (a, b) => -positionComparator(a, b, orderBy);\r\n  }\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n \r\nexport default AfoTable;","import React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TeamContext from '../../../context/teamContext';\r\nimport { Loading } from '../../../components/loading';\r\nimport { AfoTable } from '../../../components/table';\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { getSquadByTeamId } from '../../../services/player';\r\n\r\nexport default function Squad() {\r\n    const teamInfo = useContext(TeamContext);\r\n    const [ squadList, squadListLoading ] = useFetch(getSquadByTeamId(teamInfo.teamId), 'playersInTeam');\r\n    const history = useHistory();\r\n    const squadColumns = [ { id: \"firstName\", name: \"first\" }, \r\n                           { id: \"lastName\", name: \"last\" },\r\n                           { id: \"positionType\", name: \"position\" },\r\n                           { id: \"dob\", name: \"age\" } \r\n                        ];\r\n    const rowMeta = [{ name: \"firstName\"}, { name: \"lastName\" }, \r\n        { name: \"positionType\" }, { name: \"dob\", processor: ageProcessor }];\r\n    const rowClick = (player) => {\r\n        console.log(player);\r\n        history.push(`squad/${player.playerId}`);\r\n    }\r\n\r\n    return teamInfo && !squadListLoading && squadList ? <>\r\n            <h1>{teamInfo.name} squad list</h1>\r\n            <AfoTable className=\"squad-table\" defaultOrderDescBy={\"positionType\"} \r\n                columns={squadColumns} onRowClick={rowClick}\r\n                rows={squadList} rowMeta={rowMeta} />\r\n        </> \r\n    : <Loading />;\r\n}\r\n\r\nfunction ageProcessor(dob) {\r\n    var today = new Date();\r\n    var birthDate = new Date(dob);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    return age;\r\n}","export function getSquadByTeamId(teamId) {\r\n    return `query { playersInTeam(teamId: ${teamId}) {`\r\n        + `playerId\r\n        name\r\n        firstName\r\n        lastName\r\n        number\r\n        positionType\r\n        dob\r\n        height\r\n        weight` +\r\n      `}}`;\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nexport default function Player() {\r\n    const { playerId } = useParams(\"playerId\");\r\n    return <div>{playerId}</div>;\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Route, useParams, Switch, useLocation } from 'react-router';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { getTeamReturnObjectName, getTeamWithTeamId } from '../../services/team/get';\r\nimport TeamContext from '../../context/teamContext';\r\nimport Loading from '../../components/loading/Loading';\r\nimport HeaderNav from '../../components/navigation/HeaderNav';\r\nimport { Clubhouse } from '../../pages/club/clubhouse';\r\nimport { Stadium } from '../../pages/club/stadium';\r\nimport { Squad } from './squad';\r\nimport './Club.scss';\r\nimport { Player } from '../player';\r\nimport { useContext } from 'react';\r\nimport UserContext from '../../context/userContext';\r\n\r\nexport default function Club() {\r\n    const params = useParams(\"teamId\");\r\n    const location = useLocation();\r\n    const [ teamId, setTeamId ] = useState(null);\r\n    const userInfo = useContext(UserContext);\r\n    const [ teamInfo, teamInfoLoading, teamInfoError, getTeamInfoNow, setQuery ] = \r\n        useFetch('', getTeamReturnObjectName, false);\r\n\r\n    useEffect(() => {\r\n        params.teamId && !isNaN(params.teamId) && setTeamId(params.teamId);\r\n    }, [params.teamId]);\r\n\r\n    useEffect(() => {\r\n        if (teamId) {\r\n            setQuery(getTeamWithTeamId(teamId));\r\n            getTeamInfoNow(true);\r\n        }\r\n    }, [getTeamInfoNow, setQuery, teamId]);\r\n\r\n\r\n    if (teamInfoError) { \r\n        return <div className=\"error\">teamInfoError</div>;\r\n    }\r\n\r\n    return teamInfoLoading ? <Loading />:\r\n    teamInfo ? <>\r\n        <TeamContext.Provider value={teamInfo}>\r\n            <HeaderNav />\r\n            {location.pathname.split('/').length === 3 &&\r\n            <div className=\"welcome\">Hi {userInfo.name}, the owner of {teamInfo.name} FC.</div>}\r\n            <Switch>\r\n                    <Route path={`/club/${teamId}/clubhouse`}>\r\n                        <Clubhouse />\r\n                    </Route>\r\n                    <Route exact path={`/club/${teamId}/ground`}>\r\n                        <Stadium />\r\n                    </Route>\r\n                    <Route exact path={`/club/${teamId}/squad`}>\r\n                        <Squad />\r\n                    </Route>\r\n                    <Route exact path={`/club/${teamId}/squad/:playerId`}>\r\n                        <Player />\r\n                    </Route>\r\n            </Switch>\r\n        </TeamContext.Provider></> : null;\r\n}","import { getCookie } from '../common';\r\n\r\nexport function getLatestUser() {\r\n    return 'query getLatestUser {' +\r\n        'users(limit: 1, sort: USERID_DESC ) {' +\r\n            'userId' +\r\n        '}' + \r\n    '}';\r\n}\r\n\r\nexport default class TeamServices {\r\n    static getUsersFromTwitterId = (twitterId) => {\r\n        return new Promise((accept, reject) => \r\n            fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                },\r\n                body: JSON.stringify({query: `query getUsers {\r\n                    users(filter: { twitterId: ${twitterId} }) {\r\n                      screenName\r\n                      name\r\n                      location\r\n                      authLevel\r\n                      userId\r\n                    }\r\n                  }`})\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                accept(response.data.users);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        );\r\n    }\r\n\r\n    static getUserInfo = () => {\r\n        if (process.env.NODE_ENV === \"production\") {\r\n            return new Promise((accept, reject) => {\r\n                fetch(process.env.REACT_APP_GRAPH_SERVER.replace('graphql', 'api/user'),\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Authorization': 'Bearer ' + getCookie('token')\r\n                    }\r\n                })\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    console.info && console.info(response.user);\r\n                    accept(response.user);\r\n                }).catch((err) => {\r\n                    reject(err);\r\n                })\r\n            });\r\n        } else {\r\n            return new Promise((accept, reject) => {\r\n                accept({\r\n                    userId: 1234\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    static createUser = ({ name, screenName, ffoUserId, location, userId }) => {\r\n        return new Promise((accept, reject) => \r\n            fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                },\r\n                body: JSON.stringify({query: `mutation addUser { \r\n                    createUser(record:{ userId: ${ffoUserId}, twitterId: ${userId}, screenName: \"${screenName}\", name: \"${name}\", location: \"${location}\", authLevel: PLAYER}) {\r\n                    recordId,\r\n                    record {\r\n                      name\r\n                      userId\r\n                      screenName\r\n                      location\r\n                      authLevel\r\n                    },\r\n                    error {\r\n                      message\r\n                    }\r\n                  }\r\n                }`})\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response.data.createUser);\r\n                accept(response.data.createUser);\r\n            }).catch((err) => {\r\n                reject(err);\r\n            })\r\n        );\r\n    }\r\n}","import Button from \"./button\";\r\n\r\nexport default Button;","import { standardHeaders } from '../common';\r\n\r\nexport default async function getCurrentManager(teamId) {\r\n    try {\r\n        const response = await fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: standardHeaders,\r\n                body: JSON.stringify({\r\n                    query: `query { coaches(filter: { currentTeamId: ${teamId} }) {` + \r\n                    `firstName\r\n                    lastName\r\n                    knownAs\r\n                    career {\r\n                        teamId,\r\n                        start,\r\n                        end\r\n                    }\r\n                }}`})\r\n            });\r\n        \r\n        const jsonResponse = await response.json();\r\n        return jsonResponse.data.coaches[0];\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import React from 'react';\r\nimport { RadialChart } from 'react-vis';\r\n\r\nconst BroadcastingAnalysis = ({ broadcastingRevenue }) => {\r\n    const myData = [];\r\n    const getFloat = (value, label) => {\r\n        if (value) {\r\n            const flVal = parseFloat(value);\r\n            myData.push({ angle: flVal, label: `£${flVal.toFixed(1)}m`, subLabel: `${label}`});\r\n            return flVal;\r\n        } else {\r\n            return 0;\r\n        };\r\n    }\r\n\r\n    const equalShare = getFloat(broadcastingRevenue.equalShare, \"Equal Share\");\r\n    const basicAward = getFloat(broadcastingRevenue.basicAward, \"Basic Award\");\r\n    const solidarity = getFloat(broadcastingRevenue.solidarity, \"Solidarity\");\r\n    const featured = getFloat((broadcastingRevenue.minimumFeaturedGames + 1) * broadcastingRevenue.facilityFeePerGame, \"Featured Game Facility Fees\");\r\n    const overseasPaymentMin = getFloat(broadcastingRevenue.overseasPaymentMin, \"Overseas\");\r\n    const centralCommercial = getFloat(broadcastingRevenue.centralCommercial, \"Central Commercial\");\r\n    const totalRevenue = (equalShare + basicAward + solidarity + featured + overseasPaymentMin + centralCommercial).toFixed(1);\r\n\r\n    return <>\r\n        <span>Minimum Estimated Broadcasting Revenue: £{totalRevenue}m</span>\r\n        {myData.length > 0 || myData[0].value === \"0.0\" ? \r\n            <RadialChart\r\n                colorType=\"linear\"\r\n                colorDomain={[0, 2]}\r\n                data={myData}\r\n                width={300}\r\n                height={250} showLabels labelsAboveChildren \r\n                className={\"broadcasting-radial\"} />\r\n            : \r\n            <div>No information found for broadcasting</div>}\r\n    </>;\r\n}\r\n\r\nexport default BroadcastingAnalysis;","import { getCookie } from '../common';\r\n\r\nexport default async function getBroadcastingRevenue (competitionId) {\r\n    try {\r\n        const response = await fetch(process.env.REACT_APP_GRAPH_SERVER,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie('token')\r\n                },\r\n                body: JSON.stringify({query: `query { broadcastRevenue(filter: { competitionId: ${competitionId} }) {` + \r\n                    `equalShare\r\n                    basicAward\r\n                    solidarity\r\n                    meritStart\r\n                    centralCommercial\r\n                    overseasPaymentMin\r\n                    minimumFeaturedGames\r\n                    facilityFeePerGame\r\n                }}`})\r\n            });\r\n        \r\n        const jsonResponse = await response.json();\r\n        return jsonResponse.data.broadcastRevenue[0];\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import getBroadcastingRevenue from './getBroadcastingRevenue';\r\n\r\nexport function getAttendence(competitionId, teamId) {\r\n    return `query { attendances(filter: `+\r\n            `{ competitionId: ${competitionId}, teamId: ${teamId} }) {` + \r\n                    `attendance\r\n                    seasonTickets\r\n                }}`;\r\n}\r\n\r\nexport {\r\n    getBroadcastingRevenue\r\n}","import { Grid } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { RadialChart } from 'react-vis';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { getAttendence } from '../../services/financial';\r\nimport { formatCompetitionName } from '../teamanalyse';\r\nimport { Loading } from '../loading';\r\n\r\nconst Matchday = ({ capacity, season, teamId }) => {\r\n    const [ attendanceInfos, attendanceInfosLoading, attError, reRun, setQuery ] = \r\n        useFetch(getAttendence(season.leagueId, teamId), 'attendances');\r\n\r\n    console.log(attendanceInfos, attendanceInfosLoading, attError);\r\n    useEffect(() => {\r\n        setQuery(getAttendence(season.leagueId, teamId));\r\n        reRun(true);\r\n    }, [season.leagueId, reRun, setQuery, teamId]);\r\n\r\n    const attendanceInfo = attendanceInfos && attendanceInfos.length ? attendanceInfos[0] : null;\r\n    \r\n    const seasonTickets = attendanceInfo ? attendanceInfo.seasonTickets : 0;\r\n    const matchdayTickets = attendanceInfo ? attendanceInfo.attendance - seasonTickets : 0;\r\n    const unsoldTickets = attendanceInfo ? capacity - attendanceInfo.attendance : 0;\r\n\r\n    if (attendanceInfosLoading) {\r\n        return <Loading />;\r\n    }\r\n    return attendanceInfo && !attError ? \r\n            <div>\r\n                <Grid item xs={8}>\r\n                    <div>Average attendance: {attendanceInfo.attendance.toLocaleString(\"en-GB\")}</div>\r\n                    <div>For {season.name} {new Date(season.start).getFullYear()}/{new Date(season.end).getFullYear()}</div>\r\n                    <RadialChart\r\n                        colorType=\"linear\"\r\n                        colorDomain={[0, 3]}\r\n                        data={[\r\n                            { angle: matchdayTickets, label: `Matchday tickets: ${matchdayTickets.toLocaleString(\"en-GB\")}`} , \r\n                            { angle: seasonTickets,  label: `Season tickets: ${seasonTickets.toLocaleString(\"en-GB\")}`},\r\n                            { angle: unsoldTickets,  label: `Unsold: ${unsoldTickets.toLocaleString(\"en-GB\")}`}\r\n                        ]}\r\n                        width={300}\r\n                        height={250} showLabels labelsAboveChildren \r\n                        className={\"matchday-radial\"} \r\n                    />  \r\n                </Grid>\r\n            </div> : <div>\r\n                        <span>No data for {formatCompetitionName(season)}</span>\r\n                    </div>;\r\n}\r\n\r\n\r\nexport default Matchday;\r\n","import React from 'react';\r\n\r\nconst context = React.createContext('competition');\r\n\r\nexport default context;","import TeamAnalyse from \"./TeamAnalyse\";\r\n\r\nexport function formatCompetitionName(s) {\r\n    return `${s.competitionName}: ${new Date(s.start).getFullYear()}/${new Date(s.end).getFullYear()}`;\r\n}\r\n\r\nexport default TeamAnalyse;","import React, { useContext, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../button';\r\nimport { Button as MatButton, Grid, MenuItem, Select } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Loading } from '../loading';\r\nimport './TeamAnalyse.scss';\r\nimport { getPreviousLeagueSeasonsForTeam } from '../../services/competition';\r\nimport { getCurrentManager } from '../../services/team';\r\nimport { Broadcasting, Matchday } from '../analysis';\r\nimport competitionContext from '../../context/competitionContext';\r\nimport { formatCompetitionName } from './';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { Ground } from '../ground';\r\n\r\nconst TeamAnalyse = ({ broadcastingRevenue, onBack, onTeamSelect, teamInfo }) => {\r\n    const competition = useContext(competitionContext);\r\n    const [ manager, setManager ] = useState(null);\r\n    const [ season, setSeason ] = useState(null);\r\n    const [ seasons, seasonsLoading ] = \r\n        useFetch(getPreviousLeagueSeasonsForTeam(teamInfo.teamId), \"leagueCompetitionsForTeam\")\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const manager = await getCurrentManager(teamInfo.teamId);\r\n            setManager(manager);\r\n        })();\r\n    }, [teamInfo.teamId]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (!seasonsLoading && seasons && seasons.length) {\r\n                const season = seasons.find((s) => {\r\n                   return s.leagueId === competition.leagueId;\r\n                });\r\n                setSeason(season || seasons[0]);   \r\n            }\r\n        })();\r\n    }, [competition.leagueId, seasons, seasonsLoading]);\r\n    \r\n    const select = !seasonsLoading && season && season.leagueId ?\r\n        <Select value={season.leagueId} onChange={(e) => \r\n            setSeason(seasons.find(s => s.leagueId === e.target.value))\r\n        } >\r\n            {seasons.map((s) => <MenuItem key={s.leagueId} value={s.leagueId}>\r\n                {formatCompetitionName(s)}\r\n            </MenuItem>)}\r\n        </Select> : null;\r\n        \r\n    return <>\r\n        {manager ? <Grid container>\r\n            <Grid container justify=\"space-around\">\r\n                <Grid item>\r\n                    <MatButton variant=\"contained\" color=\"secondary\" onClick={() => onBack()} startIcon={<ArrowBackIcon />}>Back</MatButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\">\r\n                        <grid item><h3 className=\"text-center\">{teamInfo.name} Financial Analysis</h3></grid>\r\n                        <grid item>{select}</grid>\r\n                    </Grid>\r\n                    <Grid container\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\">\r\n                        <img src={teamInfo.logo} className=\"team-logo\" alt={`${teamInfo.name} logo`} />\r\n                    </Grid>\r\n                    <Ground capacity={teamInfo.capacity} city={teamInfo.city} name={teamInfo.ground} />\r\n                    {manager !== undefined && <div className=\"text-center\">Current Manager: {manager.knownAs || manager.firstName + ' ' + manager.lastName}</div>}\r\n                </Grid>\r\n                <Grid item>\r\n                    <Broadcasting broadcastingRevenue={broadcastingRevenue} />\r\n                </Grid>\r\n                <Grid item>\r\n                    {season ? <Matchday capacity={teamInfo.capacity} teamId={teamInfo.teamId} season={season} /> : <Loading><div>Loading Matchday Information</div></Loading>}\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Grid container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"right\">\r\n                <Grid item>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button lg green onClick={() => onTeamSelect()}>Select this team</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid> : \r\n        <Loading><div>Finding team information</div></Loading>}\r\n    </>;\r\n}\r\n\r\nTeamAnalyse.propTypes = {\r\n    broadcastingRevenue: PropTypes.object.isRequired,\r\n    onTeamSelect: PropTypes.func.isRequired,\r\n    teamInfo: PropTypes.object.isRequired\r\n}\r\n \r\nexport default TeamAnalyse;","export const getCompetitionsForCountry = (country) => {\r\n    return 'query { competitions(filter: { AND: [' + \r\n            `{ isCurrent: true }, { country: \"${country}\" },` +\r\n            '{ type: LEAGUE }]})' + \r\n            '{ name leagueId isCurrent tier logo country start}}';\r\n}\r\n\r\nexport const getPreviousSeasonsForTier = (tier, country) => {\r\n    return `query { competitions(filter:` +\r\n    `{ isCurrent: false, tier: ${tier}, country: \"${country}\" }, sort: START_DATE_DESC) { ` +\r\n            `name\r\n            leagueId\r\n            start\r\n            end\r\n    }}`;\r\n}\r\n\r\nexport const getPreviousLeagueSeasonsForTeam = (teamId) => {\r\n    return `query { ` +\r\n    `leagueCompetitionsForTeam(teamId:${teamId}) { ` +\r\n            `teamId\r\n            competitionId\r\n            leagueId\r\n            year\r\n            start\r\n            end\r\n            competitionName\r\n    }}`;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '../button';\r\n\r\nconst TeamCard = ({competitionId, onAnalyseTeam, teamInfo}) => {\r\n    const name = teamInfo.name;\r\n    return <Card className=\"team-card\">\r\n        <CardContent>\r\n            <div className=\"team-content\">\r\n                <img src={teamInfo.logo} alt={`${name} logo`}/>\r\n            </div>\r\n        </CardContent>\r\n        <CardActions>\r\n            <Button onClick={() => onAnalyseTeam(teamInfo)} green>Analyse {name}</Button>\r\n        </CardActions>\r\n    </Card>;\r\n}\r\n\r\nTeamCard.propTypes = {\r\n    onAnalyseTeam: PropTypes.func,\r\n    teamInfo: PropTypes.object\r\n}\r\n \r\nexport default TeamCard;","import TeamsInLeague from \"./TeamsInLeague\";\r\n\r\nexport default TeamsInLeague;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport TeamQueries from '../../services/team/get';\r\nimport { Loading } from '../loading';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport TeamAnalyse from '../teamanalyse';\r\nimport './TeamsInLeague.scss';\r\nimport TeamCard from './TeamCard';\r\nimport { getBroadcastingRevenue } from '../../services/financial';\r\nimport CompetitionContext from '../../context/competitionContext';\r\nimport { setGameTeam } from '../../services/game';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport UserContext from '../../context/userContext';\r\n\r\nconst TeamsInLeague = ({ onTeamSelect }) => {\r\n    const competition = useContext(CompetitionContext);\r\n    const user = useContext(UserContext);\r\n    const competitionId = competition.leagueId;\r\n    const [ teamsByCompetition, setTeamsByCompetition ] = useLocalStorage('teamsByCompetitionId', []);\r\n    const [ teams, setTeams ] = useState([]);\r\n    const [ selectedTeam, setSelectedTeam ] = useState(null);\r\n    const [ broadcasting, setBroadcasting ] = useState(null);\r\n    const [ createGameTeamResult, createGameTeamLoading, error, runCreateGameTeam, updateQuery ]\r\n         = useFetch(\r\n             setGameTeam(competition.leagueId, selectedTeam, user), \r\n             'createGameTeam', false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const teamsInCompetition = teamsByCompetition[competitionId];\r\n            if (teamsInCompetition) {\r\n                setTeams(teamsInCompetition);\r\n            } else {\r\n                const teamInCompetitions = await TeamQueries.getTeamsForLeague(competitionId);\r\n                Promise.all(\r\n                    teamInCompetitions.map(async (teamComp) => {\r\n                        const teamDetail = await TeamQueries.getTeamFromTeamId(teamComp.teamId);\r\n                        teamDetail.teamId = teamComp.teamId;\r\n                        return teamDetail;\r\n                    })\r\n                ).then((teams) => {\r\n                    setTeams(teams);\r\n                    setTeamsByCompetition({...teamsByCompetition, [competitionId] : teams });\r\n                });\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (selectedTeam) {\r\n                const broadcasting = await getBroadcastingRevenue(competitionId);\r\n                setBroadcasting(broadcasting);\r\n            }\r\n        })();\r\n    }, [selectedTeam]);\r\n\r\n    useEffect(() => {\r\n        if (createGameTeamResult && !error) {\r\n            onTeamSelect(createGameTeamResult.record.teamId);\r\n        }\r\n    }, [createGameTeamResult])\r\n\r\n    function setTeamToUser() {\r\n        updateQuery(setGameTeam(competition.leagueId, selectedTeam, user));\r\n        runCreateGameTeam(true);\r\n    }\r\n\r\n    return teams.length > 0 ? \r\n        selectedTeam && broadcasting ? \r\n        <>\r\n            <TeamAnalyse \r\n                onBack={() => setSelectedTeam(null)} \r\n                broadcastingRevenue={broadcasting} \r\n                teamInfo={selectedTeam}\r\n                onTeamSelect={setTeamToUser} \r\n            />\r\n            {createGameTeamLoading && <Loading>Please wait...</Loading>}\r\n            {error && <div>Error selecting team: {error}</div>}\r\n        </>\r\n        :\r\n        <div className=\"team-cards\">\r\n            {teams.map((t) => {\r\n                return <TeamCard \r\n                    key={t.teamId}\r\n                    onAnalyseTeam={(teamInfo) => setSelectedTeam(teamInfo)}\r\n                    teamInfo={t} \r\n                />\r\n            })}\r\n        </div>\r\n    : <Loading></Loading>;\r\n}\r\n \r\nexport default TeamsInLeague;","import { useState } from 'react';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n  \r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n  \r\n    return [storedValue, setValue];\r\n  }","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BasicRadio from '../../components/radio/radio';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport TeamsInLeague from '../../components/teamsInLeague';\r\nimport './TeamSelect.scss';\r\nimport CompetitionContext from '../../context/competitionContext';\r\n\r\nconst TeamSelect = ({competitions, onTeamSelect}) => {\r\n    const [gender, setGender] = useState('men');\r\n    const [selectedCompId, setSelectedCompetition ] = useState(null);\r\n\r\n    return competitions.length && (\r\n        <section className=\"leagues\">\r\n            {/* <BasicRadio value={gender} setValue={setGender} /> */}\r\n            <div className={\"pad-all-sm marg-bottom-sm flex\"} style={{color: \"#fff\", fontSize: \"1.2rem\"}}>\r\n                <span className={\"text-center\"} style={{width: \"90%\"}}>Take control! Select a team to analyse for financial viability.</span>\r\n                <span className={\"align-right\"}>Budget: 7m</span>\r\n            </div>\r\n\r\n            {gender === 'men' &&\r\n                competitions.filter(c => !c.name.includes('WSL') && \r\n                    (selectedCompId === null || selectedCompId === c.leagueId)).sort((a, b) => a.tier > b.tier ? 1 : -1).map((comp) => {\r\n                return <Accordion key={comp.leagueId} onChange={(ev, expanded) => {\r\n                    setSelectedCompetition(expanded ? comp.leagueId : null)\r\n                }} className=\"team-select-acc\" TransitionProps={{ unmountOnExit: true }}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\">\r\n                        {comp.name}\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <CompetitionContext.Provider value={comp}>\r\n                            <TeamsInLeague onTeamSelect={onTeamSelect} />\r\n                        </CompetitionContext.Provider>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            })}\r\n        </section>\r\n    );\r\n}\r\n\r\nconst wslTeamSelect = ({ competitions, onTeamSelect }) => {\r\n    return competitions.filter(c => c.name.includes('WSL')).sort((a, b) => a.tier > b.tier ? 1 : -1).map((comp) => {\r\n        return <div key={comp.leagueId} className=\"league\">\r\n                <div className=\"league-name\">\r\n                    {comp.name}\r\n                </div>\r\n                <div className=\"league-logo\">\r\n                    <CompetitionContext.Provider value={comp}>\r\n                        <TeamsInLeague onTeamSelect={onTeamSelect} />\r\n                    </CompetitionContext.Provider>\r\n                </div>\r\n            </div>\r\n    })\r\n}\r\n\r\nTeamSelect.propTypes = {\r\n    competitions: PropTypes.array,\r\n    onTeamSelect: PropTypes.func\r\n}\r\n \r\nexport default TeamSelect;","import TeamSelectContainer from \"./TeamSelectContainer\";\r\n\r\nexport default TeamSelectContainer;","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport TeamSelect from './TeamSelect';\r\nimport { Loading } from '../../components/loading';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { getCompetitionsForCountry } from '../../services/competition';\r\n\r\nconst TeamSelectContainer = () => {\r\n    const competitionsQuery = getCompetitionsForCountry('England');\r\n    const [ \r\n        competitionsForCountry, \r\n        competitionsLoading, \r\n        competitionLoadError\r\n    ] = useFetch(competitionsQuery, \"competitions\");\r\n    let history = useHistory();\r\n\r\n    function teamSelected(teamId) {\r\n        history.push('/club/' + teamId);\r\n    }\r\n\r\n    const loadingOrError = competitionsLoading ? \r\n        competitionLoadError ? \r\n            <div>Eek, something went wrong</div> : \r\n            <Loading>{competitionLoadError}</Loading> \r\n        : null;\r\n     \r\n    return competitionsForCountry && !competitionsLoading && !competitionLoadError ? \r\n        <TeamSelect competitions={competitionsForCountry} onTeamSelect={teamSelected} /> : loadingOrError;\r\n}\r\n\r\nexport default TeamSelectContainer;","import React, { useEffect, useState } from 'react';\nimport Start from './pages/Start';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from './styles/mat-theme';\nimport svgPattern from './bgPattern.svg';\nimport { \n  BrowserRouter as Router, Route, Switch\n} from 'react-router-dom';\nimport './App.scss';\nimport UserContext from './context/userContext';\nimport { Club } from './pages/club';\nimport userService, { getLatestUser } from './services/user/userServices';\nimport TeamSelect from './pages/teamselect';\nimport useFetch from './hooks/useFetch';\nimport { Loading } from './components/loading';\nimport { Player } from './pages/player';\n\nfunction App() {\n  const [ user, setUser ] = useState(null);\n  const [ twitterUserInfo, setTwitterUserInfo ] = useState(null);\n  const [ latestUsers, latestUsersLoading, latestUsersError, runLatestUser ] \n    = useFetch(getLatestUser(), \"users\", false);\n\n  useEffect(() => {\n    (async() => {\n      const userInfo = await userService.getUserInfo();\n\n      if (!userInfo) return;\n      const usersList = await userService.getUsersFromTwitterId(parseInt(userInfo.userId));\n\n      if (usersList.length === 0) {\n        setTwitterUserInfo(userInfo);\n        runLatestUser(true);\n      } else {\n        setUser(usersList[0]);\n      }\n    })();\n  }, [runLatestUser]);\n\n  useEffect(() => {\n    (async() => {\n      if (!latestUsersLoading && latestUsers && latestUsers[0].userId) {\n        const userInfo = twitterUserInfo;\n        userInfo.ffoUserId = latestUsers[0].userId + 1;\n        const userResult = await userService.createUser(userInfo);\n        if (userResult.error && userResult.error.message) {\n          console.error('unable to create user: ', userResult.error.message);\n        } else {\n          setUser(userResult.record);\n        }\n      } else if (latestUsersError) {\n        console.error('unable to create user without latest user', latestUsersError);\n      }\n    })();\n  }, [latestUsers, latestUsersLoading, latestUsersError, twitterUserInfo]);\n  \n  const base = process.env.NODE_ENV === \"production\" ? \"/ffo\" : \"/\";\n  \n  return user ?\n    <UserContext.Provider value={user}>\n      <div className=\"app\">\n        <div className=\"background\">\n          <img alt=\"background pattern\" src={svgPattern}></img>\n        </div>\n          <ThemeProvider theme={theme}>\n            <Router basename={base}>\n              <Switch>\n                <Route exact path='/'>\n                  <Start />\n                </Route>\n                <Route exact path='/new'>\n                  <TeamSelect />\n                </Route>\n                <Route path='/club/:teamId'>\n                  <Club />\n                </Route>\n                <Route exact path={`/player/:playerId`}>\n                    <Player />\n                </Route>\n                <Route path='*'>\n                  <Start />\n                </Route>\n              </Switch>\n            </Router>\n          </ThemeProvider>\n      </div>\n    </UserContext.Provider>: <Loading>Loading user</Loading>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}